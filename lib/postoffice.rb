module PostOffice
  COUNTRY_DATA = {
    ad: ["Andorra",'\d{5}'],
    am: ["Armenia",'\d{4}'],
    ar: ["Argentina",'\d{4}'],
    as: ["American Samoa",'\d{5}'],
    at: ["Austria",'\d{4}'],
    au: ["Australia",'\d{4}'],
    az: ["Azerbaijan",'\d{4}(\d{2})?'],
    ba: ["Bosnia and Herzegovina",'\d{5}'],
    bd: ["Bangladesh",'\d{4}'],
    be: ["Belgium",'\d{4}'],
    bg: ["Bulgaria",'\d{4}'],
    bn: ["Brunei",'[A-Z]{2}\d{4}'],
    br: ["Brazil",'\d{5}([\-]\d{3})?'],
    by: ["Belarus",'\d{6}'],
    ca: ["Canada",'[A-Z]{1}\d{1}[A-Z]{1}[ ]?\d{1}[A-Z]{1}(\d{1})?'],
    ch: ["Switzerland",'\d{4}'],
    cn: ["China",'\d{6}'],
    cu: ["Cuba", '\d{5}'],
    cy: ["Cyprus",'\d{4}'],
    cz: ["Czech Republic",'\d{3}[ ]?\d{2}'],
    de: ["Germany",'\d{5}'],
    dk: ["Denmark",'\d{4}'],
    dz: ["Algeria",'\d{5}'],
    ee: ["Estonia",'\d{5}'],
    es: ["Spain",'\d{5}'],
    fi: ["Finland",'\d{5}'],
    fm: ["Micronesia",'\d{5}'],
    fo: ["Faroe Islands",'\d{3}'],
    fr: ["France",'\d{5}'],
    gb: ["United Kingdom",'[A-Z]{1}[0-9A-Z]{1}([0-9A-Z]{1,2})?[ ]?\d{1}[A-Z]{2}',
    ge: ["Georgia",'\d{4}'],
    gf: ["French Guiana",'\d{5}'],
    gg: ["Guernsay", '[A-Z]{2}\d{1}[ ]?\d{1}[A-Z]{2}'],
    gl: ["Greenland",'\d{4}'],
    gp: ["Guadeloupe",'\d{5}'],
    gr: ["Greece",'\d{3}[ ]?\d{2}'],
    gu: ["Guam",'\d{5})?'],
    hr: ["Croatia",'\d{5}'],
    hu: ["Hungary",'\d{4}'],
    ic: ["Canary Islands", '\d{5}'],
    id: ["Indonesia",'\d{5}'],
    il: ["Israel",'\d{5}'],
    in: ["India",'\d{6}'],
    is: ["Iceland",'\d{3}'],
    it: ["Italy",'\d{5}'],
    je: ["Jersey", '[A-Z]{2}\d{1}[ ]?\d{1}[A-Z]{2}'],
    jp: ["Japan",'\d{3}(-)?\d{4}'],
    kg: ["Kyrgyzstan",'\d{6}'],
    kr: ["Korea",'\d{5}'],
    kv: ["Kosovo", '\d{5}'],
    kz: ["Kazakhstan",'\d{6}'],
    li: ["Liechtenstein",'\d{4}'],
    lt: ["Lithuania",'\d{5}'],
    lu: ["Luxembourg",'\d{4}'],
    lv: ["Latvia",'\d{4}'],
    ma: ["Morocco",'\d{5}'],
    mc: ["Monaco",'\d{5}'],
    md: ["Moldova",'\d{4}'],
    me: ["Montenegro",'\d{5}'],
    mg: ["Madagascar",'\d{3}'],
    mh: ["Marshall Islands",'\d{5}'],
    mk: ["Macedonia",'\d{4}'],
    mn: ["Mongolia",'\d{5}(\d{1})?'],
    mp: ["Saipan",'\d{5}'],
    mq: ["Martinique",'\d{5}'],
    mv: ["Maldives",'\d{4}(\d{1})?'],
    mx: ["Mexico",'\d{5}'],
    my: ["Malaysia",'\d{5}'],
    nl: ["Netherlands",'\d{4}'],
    no: ["Norway",'\d{4}'],
    nz: ["New Zealand",'\d{4}'],
    pg: ["Papua New Guinea",'\d{3}'],
    ph: ["Philippines",'\d{4}'],
    pk: ["Pakistan",'\d{5}'],
    pl: ["Poland",'\d{2}(-)?\d{3}'],
    pr: ["Puerto Rico",'\d{5}'],
    pt: ["Portugal",'\d{4}([\-]\d{3})?'],
    pw: ["Palau",'\d{5}'],
    re: ["Reunion",'\d{5}'],
    ro: ["Romania",'\d{6}'],
    rs: ["Serbia",'\d{5}'],
    ru: ["Russia",'\d{6}'],
    se: ["Sweden",'\d{3}[ ]?\d{2}'],
    sg: ["Singapore",'\d{6}'],
    si: ["Slovenia",'\d{4}'],
    sk: ["Slovakia",'\d{3}[ ]?\d{2}'],
    sm: ["San Marino",'\d{5}'],
    sz: ["Swaziland",'[A-Z]{1}\d{3}'],
    th: ["Thailand",'\d{5}'],
    tj: ["Tajikistan",'\d{6}'],
    tn: ["Tunisia",'\d{4}'],
    tr: ["Turkey",'\d{5}'],
    tw: ["Taiwan",'\d{3}(\d{2})?'],
    ua: ["Ukraine",'\d{5}'],
    us: ["United States",'\d{5}(-\d{4})?'],
    uz: ["Uzbekistan",'\d{6}'],
    vi: ["Virgin Islands (US)",'\d{5}'],
    xy: ["Saint Barthelemy", '\d{5}'],
    yt: ["Mayotte",'\d{5}'],
    za: ["South Africa",'\d{4}'],

    ax: ["Aland Islands",'22\d{3}'],
    bh: ["Bahrain",'((1[0-2]|[2-9])\d{2})?'],
    bb: ["Barbados",'(BB\d{5})?'],
    bm: ["Bermuda",'[A-Z]{2}[ ]?[A-Z0-9]{2}'],
    kh: ["Cambodia",'\d{5}'],
    cv: ["Cape Verde",'\d{4}'],
    cl: ["Chile",'\d{7}'],
    cr: ["Costa Rica",'\d{4,5}|\d{3}-\d{4}'],
    do: ["Dominican Republic",'\d{5}'],
    ec: ["Ecuador",'([A-Z]\d{4}[A-Z]|(?:[A-Z]{2})?\d{6})?'],
    eg: ["Egypt",'\d{5}'],
    gt: ["Guatemala",'\d{5}'],
    ht: ["Haiti",'\d{4}'],
    hn: ["Honduras",'(?:\d{5})?'],
    ie: ["Ireland",'((D|DUBLIN)?([1-9]|6[wW]|1[0-8]|2[024]))?'],
    jo: ["Jordan",'\d{5}'],
    ke: ["Kenya",'\d{5}'],
    kw: ["Kuwait",'\d{5}'],
    la: ["Lao People's Democratic Republic",'\d{5}'],
    lb: ["Lebanon",'(\d{4}([ ]?\d{4})?)?'],
    mt: ["Malta",'[A-Z]{3}[ ]?\d{2,4}'],
    mu: ["Mauritius",'(\d{3}[A-Z]{2}\d{3})?'],
    np: ["Nepal",'\d{5}'],
    ni: ["Nicaragua",'((\d{4}-)?\d{3}-\d{3}(-\d{1})?)?'],
    ng: ["Nigeria",'(\d{6})?'],
    om: ["Oman",'(PC )?\d{3}'],
    py: ["Paraguay",'\d{4}'],
    sa: ["Saudi Arabia",'\d{5}'],
    sn: ["Senegal",'\d{5}'],
    lk: ["Sri Lanka",'\d{5}'],
    tm: ["Turkmenistan",'\d{6}'],
    uy: ["Uruguay",'\d{5}'],
    va: ["Vatican City",'00120'],
    ve: ["Venezuela",'\d{4}'],
    zm: ["Zambia",'\d{5}'],
    cc: ["Cocos (Keeling) Islands",'6799'],
    ck: ["Cook Islands",'\d{4}'],
    cs: ["Serbia and Montenegro",'\d{5}'],
    yu: ["Yugoslavia",'\d{5}'],
    cx: ["Christmas Island",'6798'],
    et: ["Ethiopia",'\d{4}'],
    fk: ["Falkland Islands (Malvinas)",'FIQQ 1ZZ'],
    nf: ["Norfolk Island ",'2899'],
    gn: ["Guinea",'\d{3}'],
    gs: ["South Georgia and the South Sandwich Islands",'SIQQ 1ZZ'],
    gw: ["Guinea-Bissau",'\d{4}'],
    hm: ["Heard Island and McDonald Islands",'\d{4}'],
    iq: ["Iraq",'\d{5}'],
    lr: ["Liberia",'\d{4}'],
    ls: ["Lesotho",'\d{3}'],
    nc: ["New Caledonia",'988\d{2}'],
    ne: ["Niger",'\d{4}'],
    pf: ["French Polynesia",'987\d{2}'],
    pm: ["Saint Pierre and Miquelon",'9[78]5\d{2}'],
    pn: ["Pitcairn",'PCRN 1ZZ'],
    sh: ["Saint Helena",'(ASCN|STHL) 1ZZ'],
    sj: ["Svalbard and Jan Mayen",'\d{4}'],
    so: ["Somalia",'\d{5}'],
    tc: ["Turks and Caicos Islands",'TKCA 1ZZ'],
    wf: ["Wallis and Futuna",'986\d{2}'],
  }

  def get_regex(code)
    result = COUNTRY_DATA[code]
    result != nil ? result[1] : ""
  end

  def country_name(code)
    result = COUNTRY_DATA[code]
    result != nil ? result[0] : "Not found"
  end

  def validate_postcode(value, country_code)
    regexStr = PostOffice.get_regex(country_code)

    value = value.to_s.strip

    return value =~ /^#{regexStr}$/i
  end
end

include PostOffice
class PostcodeFormatValidator < ActiveModel::EachValidator
  def validate_each(object, attribute, value)

    result = PostOffice.validate_postcode(value, options[:country_code])

    unless result
      object.errors[attribute] << (options[:message] || "entered is not a valid postcode for #{PostOffice.country_name(options[:country_code])}.")
    end
  end
end